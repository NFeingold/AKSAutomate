█▀▀▄ █▀▀█ █▀▀  ▀  █▀▀ █▀▀   █▀▀█ █▀▀   ▀█ █▀ █ █    ▀  █▀▀▄   █▀▀█ ▀▀█ █  █ █▀▀█ █▀▀    ▀  █▀▀█ ▀▀█▀▀   █▀▀ █▀▀▄ █▀▀▀ █▀▀
█▀▀▄ █▄▄█ ▀▀█ ▀█▀ █   ▀▀█   █  █ █▀▀    █▄█  █▀▄   ▀█▀ █  █   █▄▄█ ▄▀  █  █ █▄▄▀ █▀▀   ▀█▀ █  █   █     █▀▀ █  █ █ ▀█ █▀▀
▀▀▀  ▀  ▀ ▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀   ▀▀▀▀ ▀       ▀   ▀ ▀   ▀▀▀ ▀  ▀   ▀  ▀ ▀▀▀  ▀▀▀ ▀ ▀▀ ▀▀▀   ▀▀▀ ▀▀▀▀   ▀     ▀▀▀ ▀▀▀  ▀▀▀▀ ▀▀▀

git clone https://github.com/Azure/iot-edge-virtual-kubelet-provider.git

----------------------------

az group create -n <resource group> -l <location: westus, eastus>
az iot hub create -n <iot hub name> -g <resource group> --sku <s1>
az aks create -n <aks cluster name> -g <resource group> -c <node count, 1> --generate-ssh-keys
	(optional): -s <version: Standard_A2_v2> --no-wait
az aks get-credentials -n <aks cluster new> -g <resource group>


kubectl create secret generic my-secrets --from-literal=hub0-cs='<iot-hub-owner-connection-string>'


kubectl --namespace kube-system create serviceaccount tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller
cd iot-edge-virtual-kubelet-provider/src/charts/iot-edge-connector/


helm install -n hub0 --set rbac.install=true .


kubectl get nodes
kubectl get pods

----------------------------

SAMPLE DEPLOYMENT

cd
kubectl apply -f \
iot-edge-virtual-kubelet-provider/src/Microsoft.Azure.VirtualKubelet.Edge.Provider/sample-deployment.yaml

----------------------------

SCALING

Through Azure Services (Increases nodes, very slow)
az aks scale -n <aks cluster name> -g <resource group> -c <node count> 
	(optional) --no-wait

Through Kubernetes (Increases pods, very fast):
kubectl scale deployments/<deployment, kubectl get deployments> --replicas <number of replicas>

----------------------------

UPDATE 

az aks upgrade -k <version to upgrade to> -n <aks cluster name> -g <resource group>
	(optional) --no-wait -y

-----------------------------

DELETE

az group delete -n <resource group> --no-wait -y
  -- or -- 
az aks delete -n <aks cluster> -g <resource group> --no-wait -y


https://docs.microsoft.com/en-us/cli/azure/aks?view=azure-cli-latest
